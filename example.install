<?php

/**
 * @file
 */
use Drupal\user\Entity\Role;
use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 */
function example_install() {
  // We will conditionally add permissions for some roles, they should be loaded
  // at the begin of this install hook and should be saved at the end.
  /** @var \Drupal\user\RoleInterface $role_anonymous */
  $role_anonymous  = Role::load(RoleInterface::ANONYMOUS_ID);
  /** @var \Drupal\user\RoleInterface $role_authenticated */
  $role_authenticated  = Role::load(RoleInterface::AUTHENTICATED_ID);

  // We might install some menu links, so we have to rebuild the router, to
  // ensure the menu links are valid.
  \Drupal::service('router.builder')
    ->rebuildIfNeeded();

  // Assign user 1 the "administrator" role.
  /** @var \Drupal\user\UserInterface $user_one */
  $user_one = User::load(1);
  $user_one->addRole('administrator');
  $user_one->save();

  // Allow visitor account creation with administrative approval.
  \Drupal::configFactory()->getEditable('user.settings')
    ->set('register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)
    ->save(TRUE);

  // Set defaults for the Comment modules, if it is installed.
  if (\Drupal::moduleHandler()->moduleExists('comment')) {
    $role_anonymous
      ->grantPermission('access comments');
    $role_authenticated
      ->grantPermission('access comments')
      ->grantPermission('post comments')
      ->grantPermission('skip comment approval');
  }

  // Set defaults for the Node module, if it is installed.
  if (\Drupal::moduleHandler()->moduleExists('node')) {
    // Enable the admin theme for node add/edit pages.
    \Drupal::configFactory()->getEditable('node.settings')
      ->set('use_admin_theme', TRUE)
      ->save(TRUE);

    // Set front wildcat_page to "node".
    \Drupal::configFactory()->getEditable('system.site')
      ->set('wildcat_page.front', '/node')
      ->save(TRUE);
  }

  // We conditionally added permissions for some roles, they should be loaded at
  // the begin of this install hook and should be saved at the end.
  $role_anonymous->save();
  $role_authenticated->save();
}
